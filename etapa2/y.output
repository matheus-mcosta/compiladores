Terminals which are not used

   TOKEN_ERROR


State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: list

    2 list: global_decl list_code

    3 global_decl: decl global_decl
    4            | decl

    5 decl: type TK_IDENTIFIER '=' value ';'
    6     | type TK_IDENTIFIER '[' LIT_INT ']' ';'
    7     | type TK_IDENTIFIER '[' LIT_INT ']' vector_params ';'
    8     | func_decl

    9 type: KW_INT
   10     | KW_FLOAT
   11     | KW_CHAR

   12 func_decl: type TK_IDENTIFIER '(' param_list ')' ';'

   13 func_impl: KW_CODE TK_IDENTIFIER '{' list_cmd '}'

   14 func_call: TK_IDENTIFIER '(' arg_list ')'

   15 arg_list: arg ',' arg_list
   16         | arg

   17 arg: TK_IDENTIFIER
   18    | value

   19 param_list: param ',' param_list
   20           | param
   21           | /* empty */

   22 param: type TK_IDENTIFIER

   23 vector_params: value vector_params
   24              | value

   25 value: LIT_INT
   26      | LIT_REAL
   27      | LIT_CHAR

   28 list_code: func_impl list_code
   29          | func_impl

   30 block: '{' list_cmd '}'
   31      | '{' '}'

   32 list_cmd: cmd list_cmd
   33         | cmd

   34 cmd: attribute
   35    | if
   36    | while
   37    | print
   38    | func_call
   39    | block
   40    | return
   41    | ';'

   42 attribute: TK_IDENTIFIER '=' expr ';'
   43          | TK_IDENTIFIER '[' expr ']' '=' expr ';'

   44 if: KW_IF '(' expr ')' cmd
   45   | KW_IF '(' expr ')' cmd KW_ELSE cmd

   46 while: KW_WHILE '(' expr ')' cmd

   47 print: KW_PRINT expr ';'
   48      | KW_PRINT LIT_STRING ';'

   49 return: KW_RETURN expr ';'

   50 input: KW_INPUT '(' type ')'

   51 expr: value
   52     | input
   53     | func_call
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr '<' expr
   59     | expr '>' expr
   60     | expr OPERATOR_LE expr
   61     | expr OPERATOR_GE expr
   62     | expr OPERATOR_EQ expr
   63     | expr OPERATOR_DIF expr
   64     | expr '&' expr
   65     | expr '|' expr
   66     | '~' expr
   67     | '(' expr ')'
   68     | TK_IDENTIFIER
   69     | vector

   70 vector: TK_IDENTIFIER '[' LIT_INT ']'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 64
'(' (40) 12 14 44 45 46 50 67
')' (41) 12 14 44 45 46 50 67
'*' (42) 56
'+' (43) 54
',' (44) 15 19
'-' (45) 55
'/' (47) 57
';' (59) 5 6 7 12 41 42 43 47 48 49
'<' (60) 58
'=' (61) 5 42 43
'>' (62) 59
'[' (91) 6 7 43 70
']' (93) 6 7 43 70
'{' (123) 13 30 31
'|' (124) 65
'}' (125) 13 30 31
'~' (126) 66
error (256)
KW_CHAR (258) 11
KW_INT (259) 9
KW_FLOAT (260) 10
KW_CODE (261) 13
KW_IF (262) 44 45
KW_ELSE (263) 45
KW_WHILE (264) 46
KW_INPUT (265) 50
KW_PRINT (266) 47 48
KW_RETURN (267) 49
OPERATOR_LE (268) 60
OPERATOR_GE (269) 61
OPERATOR_EQ (270) 62
OPERATOR_DIF (271) 63
TK_IDENTIFIER (272) 5 6 7 12 13 14 17 22 42 43 68 70
LIT_INT (273) 6 7 25 70
LIT_REAL (274) 26
LIT_CHAR (275) 27
LIT_STRING (276) 48
TOKEN_ERROR (277)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
list (43)
    on left: 2, on right: 1
global_decl (44)
    on left: 3 4, on right: 2 3
decl (45)
    on left: 5 6 7 8, on right: 3 4
type (46)
    on left: 9 10 11, on right: 5 6 7 12 22 50
func_decl (47)
    on left: 12, on right: 8
func_impl (48)
    on left: 13, on right: 28 29
func_call (49)
    on left: 14, on right: 38 53
arg_list (50)
    on left: 15 16, on right: 14 15
arg (51)
    on left: 17 18, on right: 15 16
param_list (52)
    on left: 19 20 21, on right: 12 19
param (53)
    on left: 22, on right: 19 20
vector_params (54)
    on left: 23 24, on right: 7 23
value (55)
    on left: 25 26 27, on right: 5 18 23 24 51
list_code (56)
    on left: 28 29, on right: 2 28
block (57)
    on left: 30 31, on right: 39
list_cmd (58)
    on left: 32 33, on right: 13 30 32
cmd (59)
    on left: 34 35 36 37 38 39 40 41, on right: 32 33 44 45 46
attribute (60)
    on left: 42 43, on right: 34
if (61)
    on left: 44 45, on right: 35
while (62)
    on left: 46, on right: 36
print (63)
    on left: 47 48, on right: 37
return (64)
    on left: 49, on right: 40
input (65)
    on left: 50, on right: 52
expr (66)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69, on right: 42 43 44 45 46 47 49 54 55 56 57 58 59 60 61 62 63
    64 65 66 67
vector (67)
    on left: 70, on right: 69


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    program      go to state 4
    list         go to state 5
    global_decl  go to state 6
    decl         go to state 7
    type         go to state 8
    func_decl    go to state 9


state 1

   11 type: KW_CHAR .

    $default  reduce using rule 11 (type)


state 2

    9 type: KW_INT .

    $default  reduce using rule 9 (type)


state 3

   10 type: KW_FLOAT .

    $default  reduce using rule 10 (type)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: list .

    $default  reduce using rule 1 (program)


state 6

    2 list: global_decl . list_code

    KW_CODE  shift, and go to state 11

    func_impl  go to state 12
    list_code  go to state 13


state 7

    3 global_decl: decl . global_decl
    4            | decl .

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (global_decl)

    global_decl  go to state 14
    decl         go to state 7
    type         go to state 8
    func_decl    go to state 9


state 8

    5 decl: type . TK_IDENTIFIER '=' value ';'
    6     | type . TK_IDENTIFIER '[' LIT_INT ']' ';'
    7     | type . TK_IDENTIFIER '[' LIT_INT ']' vector_params ';'
   12 func_decl: type . TK_IDENTIFIER '(' param_list ')' ';'

    TK_IDENTIFIER  shift, and go to state 15


state 9

    8 decl: func_decl .

    $default  reduce using rule 8 (decl)


state 10

    0 $accept: program $end .

    $default  accept


state 11

   13 func_impl: KW_CODE . TK_IDENTIFIER '{' list_cmd '}'

    TK_IDENTIFIER  shift, and go to state 16


state 12

   28 list_code: func_impl . list_code
   29          | func_impl .

    KW_CODE  shift, and go to state 11

    $default  reduce using rule 29 (list_code)

    func_impl  go to state 12
    list_code  go to state 17


state 13

    2 list: global_decl list_code .

    $default  reduce using rule 2 (list)


state 14

    3 global_decl: decl global_decl .

    $default  reduce using rule 3 (global_decl)


state 15

    5 decl: type TK_IDENTIFIER . '=' value ';'
    6     | type TK_IDENTIFIER . '[' LIT_INT ']' ';'
    7     | type TK_IDENTIFIER . '[' LIT_INT ']' vector_params ';'
   12 func_decl: type TK_IDENTIFIER . '(' param_list ')' ';'

    '='  shift, and go to state 18
    '['  shift, and go to state 19
    '('  shift, and go to state 20


state 16

   13 func_impl: KW_CODE TK_IDENTIFIER . '{' list_cmd '}'

    '{'  shift, and go to state 21


state 17

   28 list_code: func_impl list_code .

    $default  reduce using rule 28 (list_code)


state 18

    5 decl: type TK_IDENTIFIER '=' . value ';'

    LIT_INT   shift, and go to state 22
    LIT_REAL  shift, and go to state 23
    LIT_CHAR  shift, and go to state 24

    value  go to state 25


state 19

    6 decl: type TK_IDENTIFIER '[' . LIT_INT ']' ';'
    7     | type TK_IDENTIFIER '[' . LIT_INT ']' vector_params ';'

    LIT_INT  shift, and go to state 26


state 20

   12 func_decl: type TK_IDENTIFIER '(' . param_list ')' ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 21 (param_list)

    type        go to state 27
    param_list  go to state 28
    param       go to state 29


state 21

   13 func_impl: KW_CODE TK_IDENTIFIER '{' . list_cmd '}'

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36

    func_call  go to state 37
    block      go to state 38
    list_cmd   go to state 39
    cmd        go to state 40
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 22

   25 value: LIT_INT .

    $default  reduce using rule 25 (value)


state 23

   26 value: LIT_REAL .

    $default  reduce using rule 26 (value)


state 24

   27 value: LIT_CHAR .

    $default  reduce using rule 27 (value)


state 25

    5 decl: type TK_IDENTIFIER '=' value . ';'

    ';'  shift, and go to state 46


state 26

    6 decl: type TK_IDENTIFIER '[' LIT_INT . ']' ';'
    7     | type TK_IDENTIFIER '[' LIT_INT . ']' vector_params ';'

    ']'  shift, and go to state 47


state 27

   22 param: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 48


state 28

   12 func_decl: type TK_IDENTIFIER '(' param_list . ')' ';'

    ')'  shift, and go to state 49


state 29

   19 param_list: param . ',' param_list
   20           | param .

    ','  shift, and go to state 50

    $default  reduce using rule 20 (param_list)


state 30

   44 if: KW_IF . '(' expr ')' cmd
   45   | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 51


state 31

   46 while: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 52


state 32

   47 print: KW_PRINT . expr ';'
   48      | KW_PRINT . LIT_STRING ';'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    LIT_STRING     shift, and go to state 55
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 61
    vector     go to state 62


state 33

   49 return: KW_RETURN . expr ';'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 63
    vector     go to state 62


state 34

   14 func_call: TK_IDENTIFIER . '(' arg_list ')'
   42 attribute: TK_IDENTIFIER . '=' expr ';'
   43          | TK_IDENTIFIER . '[' expr ']' '=' expr ';'

    '='  shift, and go to state 64
    '['  shift, and go to state 65
    '('  shift, and go to state 66


state 35

   41 cmd: ';' .

    $default  reduce using rule 41 (cmd)


state 36

   30 block: '{' . list_cmd '}'
   31      | '{' . '}'

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36
    '}'            shift, and go to state 67

    func_call  go to state 37
    block      go to state 38
    list_cmd   go to state 68
    cmd        go to state 40
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 37

   38 cmd: func_call .

    $default  reduce using rule 38 (cmd)


state 38

   39 cmd: block .

    $default  reduce using rule 39 (cmd)


state 39

   13 func_impl: KW_CODE TK_IDENTIFIER '{' list_cmd . '}'

    '}'  shift, and go to state 69


state 40

   32 list_cmd: cmd . list_cmd
   33         | cmd .

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36

    $default  reduce using rule 33 (list_cmd)

    func_call  go to state 37
    block      go to state 38
    list_cmd   go to state 70
    cmd        go to state 40
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 41

   34 cmd: attribute .

    $default  reduce using rule 34 (cmd)


state 42

   35 cmd: if .

    $default  reduce using rule 35 (cmd)


state 43

   36 cmd: while .

    $default  reduce using rule 36 (cmd)


state 44

   37 cmd: print .

    $default  reduce using rule 37 (cmd)


state 45

   40 cmd: return .

    $default  reduce using rule 40 (cmd)


state 46

    5 decl: type TK_IDENTIFIER '=' value ';' .

    $default  reduce using rule 5 (decl)


state 47

    6 decl: type TK_IDENTIFIER '[' LIT_INT ']' . ';'
    7     | type TK_IDENTIFIER '[' LIT_INT ']' . vector_params ';'

    LIT_INT   shift, and go to state 22
    LIT_REAL  shift, and go to state 23
    LIT_CHAR  shift, and go to state 24
    ';'       shift, and go to state 71

    vector_params  go to state 72
    value          go to state 73


state 48

   22 param: type TK_IDENTIFIER .

    $default  reduce using rule 22 (param)


state 49

   12 func_decl: type TK_IDENTIFIER '(' param_list ')' . ';'

    ';'  shift, and go to state 74


state 50

   19 param_list: param ',' . param_list

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 21 (param_list)

    type        go to state 27
    param_list  go to state 75
    param       go to state 29


state 51

   44 if: KW_IF '(' . expr ')' cmd
   45   | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 76
    vector     go to state 62


state 52

   46 while: KW_WHILE '(' . expr ')' cmd

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 77
    vector     go to state 62


state 53

   50 input: KW_INPUT . '(' type ')'

    '('  shift, and go to state 78


state 54

   14 func_call: TK_IDENTIFIER . '(' arg_list ')'
   68 expr: TK_IDENTIFIER .
   70 vector: TK_IDENTIFIER . '[' LIT_INT ']'

    '['  shift, and go to state 79
    '('  shift, and go to state 66

    $default  reduce using rule 68 (expr)


state 55

   48 print: KW_PRINT LIT_STRING . ';'

    ';'  shift, and go to state 80


state 56

   66 expr: '~' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 81
    vector     go to state 62


state 57

   67 expr: '(' . expr ')'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 82
    vector     go to state 62


state 58

   53 expr: func_call .

    $default  reduce using rule 53 (expr)


state 59

   51 expr: value .

    $default  reduce using rule 51 (expr)


state 60

   52 expr: input .

    $default  reduce using rule 52 (expr)


state 61

   47 print: KW_PRINT expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ';'           shift, and go to state 95


state 62

   69 expr: vector .

    $default  reduce using rule 69 (expr)


state 63

   49 return: KW_RETURN expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ';'           shift, and go to state 96


state 64

   42 attribute: TK_IDENTIFIER '=' . expr ';'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 97
    vector     go to state 62


state 65

   43 attribute: TK_IDENTIFIER '[' . expr ']' '=' expr ';'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 98
    vector     go to state 62


state 66

   14 func_call: TK_IDENTIFIER '(' . arg_list ')'

    TK_IDENTIFIER  shift, and go to state 99
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24

    arg_list  go to state 100
    arg       go to state 101
    value     go to state 102


state 67

   31 block: '{' '}' .

    $default  reduce using rule 31 (block)


state 68

   30 block: '{' list_cmd . '}'

    '}'  shift, and go to state 103


state 69

   13 func_impl: KW_CODE TK_IDENTIFIER '{' list_cmd '}' .

    $default  reduce using rule 13 (func_impl)


state 70

   32 list_cmd: cmd list_cmd .

    $default  reduce using rule 32 (list_cmd)


state 71

    6 decl: type TK_IDENTIFIER '[' LIT_INT ']' ';' .

    $default  reduce using rule 6 (decl)


state 72

    7 decl: type TK_IDENTIFIER '[' LIT_INT ']' vector_params . ';'

    ';'  shift, and go to state 104


state 73

   23 vector_params: value . vector_params
   24              | value .

    LIT_INT   shift, and go to state 22
    LIT_REAL  shift, and go to state 23
    LIT_CHAR  shift, and go to state 24

    $default  reduce using rule 24 (vector_params)

    vector_params  go to state 105
    value          go to state 73


state 74

   12 func_decl: type TK_IDENTIFIER '(' param_list ')' ';' .

    $default  reduce using rule 12 (func_decl)


state 75

   19 param_list: param ',' param_list .

    $default  reduce using rule 19 (param_list)


state 76

   44 if: KW_IF '(' expr . ')' cmd
   45   | KW_IF '(' expr . ')' cmd KW_ELSE cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ')'           shift, and go to state 106


state 77

   46 while: KW_WHILE '(' expr . ')' cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ')'           shift, and go to state 107


state 78

   50 input: KW_INPUT '(' . type ')'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    type  go to state 108


state 79

   70 vector: TK_IDENTIFIER '[' . LIT_INT ']'

    LIT_INT  shift, and go to state 109


state 80

   48 print: KW_PRINT LIT_STRING ';' .

    $default  reduce using rule 48 (print)


state 81

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr
   66     | '~' expr .

    $default  reduce using rule 66 (expr)


state 82

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr
   67     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ')'           shift, and go to state 110


state 83

   60 expr: expr OPERATOR_LE . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 111
    vector     go to state 62


state 84

   61 expr: expr OPERATOR_GE . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 112
    vector     go to state 62


state 85

   62 expr: expr OPERATOR_EQ . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 113
    vector     go to state 62


state 86

   63 expr: expr OPERATOR_DIF . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 114
    vector     go to state 62


state 87

   64 expr: expr '&' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 115
    vector     go to state 62


state 88

   57 expr: expr '/' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 116
    vector     go to state 62


state 89

   65 expr: expr '|' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 117
    vector     go to state 62


state 90

   56 expr: expr '*' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 118
    vector     go to state 62


state 91

   55 expr: expr '-' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 119
    vector     go to state 62


state 92

   54 expr: expr '+' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 120
    vector     go to state 62


state 93

   58 expr: expr '<' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 121
    vector     go to state 62


state 94

   59 expr: expr '>' . expr

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 122
    vector     go to state 62


state 95

   47 print: KW_PRINT expr ';' .

    $default  reduce using rule 47 (print)


state 96

   49 return: KW_RETURN expr ';' .

    $default  reduce using rule 49 (return)


state 97

   42 attribute: TK_IDENTIFIER '=' expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ';'           shift, and go to state 123


state 98

   43 attribute: TK_IDENTIFIER '[' expr . ']' '=' expr ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ']'           shift, and go to state 124


state 99

   17 arg: TK_IDENTIFIER .

    $default  reduce using rule 17 (arg)


state 100

   14 func_call: TK_IDENTIFIER '(' arg_list . ')'

    ')'  shift, and go to state 125


state 101

   15 arg_list: arg . ',' arg_list
   16         | arg .

    ','  shift, and go to state 126

    $default  reduce using rule 16 (arg_list)


state 102

   18 arg: value .

    $default  reduce using rule 18 (arg)


state 103

   30 block: '{' list_cmd '}' .

    $default  reduce using rule 30 (block)


state 104

    7 decl: type TK_IDENTIFIER '[' LIT_INT ']' vector_params ';' .

    $default  reduce using rule 7 (decl)


state 105

   23 vector_params: value vector_params .

    $default  reduce using rule 23 (vector_params)


state 106

   44 if: KW_IF '(' expr ')' . cmd
   45   | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36

    func_call  go to state 37
    block      go to state 38
    cmd        go to state 127
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 107

   46 while: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36

    func_call  go to state 37
    block      go to state 38
    cmd        go to state 128
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 108

   50 input: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 129


state 109

   70 vector: TK_IDENTIFIER '[' LIT_INT . ']'

    ']'  shift, and go to state 130


state 110

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


state 111

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   60     | expr OPERATOR_LE expr .
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 60 (expr)


state 112

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   61     | expr OPERATOR_GE expr .
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 61 (expr)


state 113

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   62     | expr OPERATOR_EQ expr .
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 62 (expr)


state 114

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   63     | expr OPERATOR_DIF expr .
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 63 (expr)


state 115

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   64     | expr '&' expr .
   65     | expr . '|' expr

    $default  reduce using rule 64 (expr)


state 116

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 57 (expr)


state 117

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr
   65     | expr '|' expr .

    $default  reduce using rule 65 (expr)


state 118

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 56 (expr)


state 119

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 55 (expr)


state 120

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 54 (expr)


state 121

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   58     | expr '<' expr .
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 58 (expr)


state 122

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   59     | expr '>' expr .
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    $default  reduce using rule 59 (expr)


state 123

   42 attribute: TK_IDENTIFIER '=' expr ';' .

    $default  reduce using rule 42 (attribute)


state 124

   43 attribute: TK_IDENTIFIER '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 131


state 125

   14 func_call: TK_IDENTIFIER '(' arg_list ')' .

    $default  reduce using rule 14 (func_call)


state 126

   15 arg_list: arg ',' . arg_list

    TK_IDENTIFIER  shift, and go to state 99
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24

    arg_list  go to state 132
    arg       go to state 101
    value     go to state 102


state 127

   44 if: KW_IF '(' expr ')' cmd .
   45   | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 133

    KW_ELSE   [reduce using rule 44 (if)]
    $default  reduce using rule 44 (if)


state 128

   46 while: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 46 (while)


state 129

   50 input: KW_INPUT '(' type ')' .

    $default  reduce using rule 50 (input)


state 130

   70 vector: TK_IDENTIFIER '[' LIT_INT ']' .

    $default  reduce using rule 70 (vector)


state 131

   43 attribute: TK_IDENTIFIER '[' expr ']' '=' . expr ';'

    KW_INPUT       shift, and go to state 53
    TK_IDENTIFIER  shift, and go to state 54
    LIT_INT        shift, and go to state 22
    LIT_REAL       shift, and go to state 23
    LIT_CHAR       shift, and go to state 24
    '~'            shift, and go to state 56
    '('            shift, and go to state 57

    func_call  go to state 58
    value      go to state 59
    input      go to state 60
    expr       go to state 134
    vector     go to state 62


state 132

   15 arg_list: arg ',' arg_list .

    $default  reduce using rule 15 (arg_list)


state 133

   45 if: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 30
    KW_WHILE       shift, and go to state 31
    KW_PRINT       shift, and go to state 32
    KW_RETURN      shift, and go to state 33
    TK_IDENTIFIER  shift, and go to state 34
    ';'            shift, and go to state 35
    '{'            shift, and go to state 36

    func_call  go to state 37
    block      go to state 38
    cmd        go to state 135
    attribute  go to state 41
    if         go to state 42
    while      go to state 43
    print      go to state 44
    return     go to state 45


state 134

   43 attribute: TK_IDENTIFIER '[' expr ']' '=' expr . ';'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '<' expr
   59     | expr . '>' expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_GE expr
   62     | expr . OPERATOR_EQ expr
   63     | expr . OPERATOR_DIF expr
   64     | expr . '&' expr
   65     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 83
    OPERATOR_GE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_DIF  shift, and go to state 86
    '&'           shift, and go to state 87
    '/'           shift, and go to state 88
    '|'           shift, and go to state 89
    '*'           shift, and go to state 90
    '-'           shift, and go to state 91
    '+'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94
    ';'           shift, and go to state 136


state 135

   45 if: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 45 (if)


state 136

   43 attribute: TK_IDENTIFIER '[' expr ']' '=' expr ';' .

    $default  reduce using rule 43 (attribute)
